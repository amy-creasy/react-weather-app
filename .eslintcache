[{"C:\\Users\\agrav\\Desktop\\SheCodes\\react-weather-app\\src\\index.js":"1","C:\\Users\\agrav\\Desktop\\SheCodes\\react-weather-app\\src\\App.js":"2","C:\\Users\\agrav\\Desktop\\SheCodes\\react-weather-app\\src\\reportWebVitals.js":"3","C:\\Users\\agrav\\Desktop\\SheCodes\\react-weather-app\\src\\Weather.js":"4","C:\\Users\\agrav\\Desktop\\SheCodes\\react-weather-app\\src\\FormattedDate.js":"5","C:\\Users\\agrav\\Desktop\\SheCodes\\react-weather-app\\src\\CurrentWeatherData.js":"6","C:\\Users\\agrav\\Desktop\\SheCodes\\react-weather-app\\src\\WeatherIcon.js":"7"},{"size":543,"mtime":1608721624458,"results":"8","hashOfConfig":"9"},{"size":466,"mtime":1608739781188,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":2202,"mtime":1608816562454,"results":"12","hashOfConfig":"9"},{"size":561,"mtime":1608740473937,"results":"13","hashOfConfig":"9"},{"size":2939,"mtime":1608816557741,"results":"14","hashOfConfig":"9"},{"size":749,"mtime":1608818122438,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"8lr4d1",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\agrav\\Desktop\\SheCodes\\react-weather-app\\src\\index.js",[],["33","34"],"C:\\Users\\agrav\\Desktop\\SheCodes\\react-weather-app\\src\\App.js",[],"C:\\Users\\agrav\\Desktop\\SheCodes\\react-weather-app\\src\\reportWebVitals.js",[],"C:\\Users\\agrav\\Desktop\\SheCodes\\react-weather-app\\src\\Weather.js",["35"],"import React, {useState} from \"react\";\r\nimport CurrentWeatherData from \"./CurrentWeatherData\";\r\nimport axios from \"axios\";\r\nimport \"./Weather.css\";\r\n\r\n\r\nexport default function Weather(props) {\r\n    const [weatherData, setWeatherData] = useState({ ready: false});\r\n    const [city, setCity] = useState (props.defaultCity)\r\n    function handleResponse (response){\r\n        setWeatherData ({\r\n            ready: true,\r\n            city: response.data.name,\r\n            date: new Date(response.data.dt * 1000),\r\n            icon: response.data.weather[0].icon,\r\n            temperature: response.data.main.temp,\r\n            description: response.data.weather[0].description,\r\n            clouds: response.data.clouds.all,\r\n            humidity: response.data.main.humidity,\r\n            wind: response.data.wind.speed\r\n        });\r\n    }\r\nfunction searchCity () {\r\n    const apiKey = \"a86c3b0abefd7bc099059a69f17f7675\";\r\n    let apiUrl = `http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\r\n    axios.get(apiUrl).then(handleResponse);\r\n}\r\n\r\n    function handleSubmit (event) {\r\n    event.preventDefault();\r\n    searchCity();\r\n    }\r\n\r\n    function handleCityInput (event) {\r\n    setCity(event.target.value);\r\n    }\r\n\r\n    if (weatherData.ready) {\r\n    return (\r\n        <div className =\"Weather\">\r\n                <form className =\"search-form\" onSubmit={handleSubmit}>\r\n                    <div className = \"row\">\r\n                        <div className =\"col-9\">\r\n                            <input type =\"search\" placeholder =\"Search for a city...\" className=\"form-control\" autoFocus=\"on\" onChange={handleCityInput}/>\r\n                            <p id=\"current-location\"><small><a href=\"#\">Current Location</a></small></p>\r\n                        </div>\r\n                        <div className =\"col-3 submit-button\">\r\n                            <input type =\"submit\" value =\"Search\" className=\"btn btn-light\"/>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                < CurrentWeatherData data={weatherData}/>\r\n        </div>\r\n    );\r\n\r\n    }\r\n    else {\r\n    searchCity();\r\n    return \"Loading...\";\r\n    }\r\n\r\n \r\n}","C:\\Users\\agrav\\Desktop\\SheCodes\\react-weather-app\\src\\FormattedDate.js",[],"C:\\Users\\agrav\\Desktop\\SheCodes\\react-weather-app\\src\\CurrentWeatherData.js",["36","37"],"import React from \"react\";\r\nimport FormattedDate from \"./FormattedDate\";\r\nimport cloudIcon from \"./cloud icon.png\";\r\nimport humidityIcon from \"./humidity icon.png\";\r\nimport windIcon from \"./wind icon.png\";\r\nimport WeatherIcon from \"./WeatherIcon\";\r\n\r\n\r\nexport default function CurrentWeatherData (props){\r\n    return (\r\n        <div className=\"current-weather-data\">\r\n            <div className=\"location-and-date\">\r\n                <h1>{props.data.city}</h1>\r\n                <p><em> < FormattedDate date={props.data.date} /></em></p>\r\n            </div> \r\n            <div className = \"weather-data-container\">\r\n                <div className=\"current-weather\">\r\n                    <div className=\"current-weather-icon-container\">\r\n                        <WeatherIcon code={props.data.icon}/>\r\n                    </div>\r\n                    <div className=\"current-weather-content-container\">\r\n                        <div className=\"current-temperature\"><span id=\"temperature-value\">{Math.round(props.data.temperature)}</span><span class=\"units\"><a href=\"#\" class=\"active\" id=\"celsius-link\">°C</a> | <a href=\"#\" class=\"inactive\" id=\"fahrenheit-link\">°F</a></span> </div>\r\n                        <div className=\"current-weather-description text-capitalize\">{props.data.description}</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"current-weather-stats\">\r\n                    <div className=\"Cloudiness\">\r\n                        <div className=\"label\">\r\n                            Clouds\r\n                        </div>\r\n                        <div className=\"image\">\r\n                            <img src={cloudIcon} alt=\"\"/>\r\n                        </div>\r\n                        <div className=\"value\" id=\"cloudiness-value\">\r\n                            {props.data.clouds}%\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"humidity\">\r\n                        <div className=\"label\">\r\n                            Humidity\r\n                        </div>\r\n                        <div className=\"image\">\r\n                            <img src={humidityIcon} alt=\"\"/>\r\n                        </div>\r\n                        <div className=\"value\" id=\"humidity-value\">\r\n                            {props.data.humidity}%\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"wind\">\r\n                        <div className=\"label\">\r\n                            Wind\r\n                        </div>\r\n                        <div className=\"image\">\r\n                            <img src={windIcon} alt=\"\"/>\r\n                        </div>\r\n                        <div className=\"value\" id=\"wind-value\">\r\n                            {Math.round(props.data.wind)}mph\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\agrav\\Desktop\\SheCodes\\react-weather-app\\src\\WeatherIcon.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":45,"column":61,"nodeType":"44","endLine":45,"endColumn":73},{"ruleId":"42","severity":1,"message":"43","line":22,"column":154,"nodeType":"44","endLine":22,"endColumn":199},{"ruleId":"42","severity":1,"message":"43","line":22,"column":208,"nodeType":"44","endLine":22,"endColumn":258},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]